{"basic_builder": {"appname": "TA-auscert", "friendly_name": "Add-on for AusCERT", "version": "2.0.0", "author": "Luke Monahan <luke.monahan@tesserent.com>", "description": "Collects threat intelligence feeds published by AusCERT. These feeds can be loaded into the ES threat intelligence collections by enabling the included saved search.", "theme": "#65A637", "large_icon": "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", "small_icon": "iVBORw0KGgoAAAANSUhEUgAAACQAAAAkCAYAAADhAJiYAAADHUlEQVRYR+2YeU8qQRDEGxQVPFBBRVEBT77/p1HBC9TgfYGKQDS/zuvNqLDA+uIjL/Zf6u7MVFdV12wMyYBVaMDwyGAD2tnZefsXjOXzeY+YDwz9Avojx//N0NjYmPYZCoWk2WxKo9Ho24aBGQqHw7KxsSEvLy/y/PwsMzMzUq1W5ezsTEEsLS3JxMSE3NzcCECj0agUi0V5e/OflcCA4vG43N/f98wArAHw8fHRd01gQLCzv7/vdZxKpQSQMMDhrVZLLi4u5OHhwZNxbW1N1/hVX4CQaXJyUubm5pR+KpPJSK1Wk6urqy/nACyXyykw5KQAdXt7K3d3d23l6wvQ1taW7O3tKQMwYb9z0Obmphr58PDQ8xC+OTg4kPHxcZWrUql4a3m/UCh8aaIvQKurq1IqlXQTJDOWIpGIAuQ5AKjt7W3Z3d2VqakplQ1ANGIeymazcnR09D1ASHV5eakdM9Kvr6+6YS+AeA/5jMHZ2VmdwM/VF0MmkXXPZtPT0zIyMqKbw5CZOJFIKEPpdFqenp7UN/Y+/nH3cEH1DIgsoStyxphKJpNyfX3dNVs40OQ276ysrCjb5FhgQCzGB6Ojo7oR7NBtL0VQ0oxrZqRnQgMBYmJIZEYfz9TrdQXH35HEr9z33GHA6BYHtr5nyQCBVHTpprR17gfIZdK8g2TEwOf7rmdAHGimJtxsvN0s6gTKHXFMfnp6+iHDAknGIkxMIruskNTHx8e+khlomOL+I7O4jG3yAgNaXl6Wk5MTXW9dx2IxvbfwVLvCcwAhFtwcckM2MCAmxNKZ7CGFGV38gLHpnuuDGh4e1nTmHdLdWAIgDK2vr3t7BQZknxDz8/N6a5NNCwsLnmQAK5fLur8ZH2B4jjuQgiWyywL0M6t9mdpdzCFcA3QLkKGhIc0mJofiq2BxcVHOz8+VOZjBb3Z1dDJdYEDtTGmmN0DuxxjsArITMwYwMCAOIOTIEQ4ho/jZ4gBpyC48BhA8Z/7zG8nAgNptiqeQDrBM3Y9+5PsGzzce/lWGvoHDW/oLqBuLHRnqtvAnng/2/4d+goFuZ7wDz5AlQ39GFyAAAAAASUVORK5CYII=", "visible": true, "tab_version": "4.1.1", "tab_build_no": "0", "build_no": 1}, "data_input_builder": {"datainputs": [{"index": "default", "sourcetype": "auscert:malware", "interval": "86400", "use_external_validation": true, "streaming_mode_xml": true, "name": "auscert_malware_feed", "title": "AusCERT malware feed", "description": "", "type": "customized", "parameters": [{"required": true, "name": "auscert_api_key", "label": "AusCERT API Key", "placeholder": "", "default_value": "", "help_string": "", "type": "password", "format_type": "password", "value": ""}], "data_inputs_options": [{"type": "customized_var", "name": "auscert_api_key", "title": "AusCERT API Key", "description": "", "required_on_edit": false, "required_on_create": true, "format_type": "password", "default_value": "", "placeholder": ""}], "code": "# encoding = utf-8\n\nimport os\nimport sys\nimport time\nimport datetime\n\n\ndef validate_input(helper, definition):\n    \"\"\"Implement your own validation logic to validate the input stanza configurations\"\"\"\n    # This example accesses the modular input variable\n    # auscert_api_key = definition.parameters.get('auscert_api_key', None)\n    pass\n\ndef collect_events(helper, ew):\n\n    opt_auscert_api_key = helper.get_arg('auscert_api_key')\n\n    proxy_settings = helper.get_proxy()\n\n    helper.log_info(\"Retrieving AusCERT 7-day malware feed\")\n\n    url = \"https://www.auscert.org.au/api/v1/malurl/malware-7-txt\"\n    headers = {'API-Key': opt_auscert_api_key}\n\n    # The following examples send rest requests to some endpoint.\n    response = helper.send_http_request(url, method=\"GET\", parameters=None, payload=None,\n                                        headers=headers, cookies=None, verify=True, cert=None,\n                                        timeout=None, use_proxy=True)\n\n    response.raise_for_status()\n\n    for data in response.text.splitlines():\n        event = helper.new_event(data, index=helper.get_output_index(), source=url, sourcetype=helper.get_sourcetype())\n        ew.write_event(event)", "customized_options": [], "uuid": "04d17499a9684ed2b16626130fcc21d8"}, {"index": "default", "sourcetype": "auscert:phishing", "interval": "86400", "use_external_validation": true, "streaming_mode_xml": true, "name": "auscert_phishing_feed", "title": "AusCERT phishing feed", "description": "", "type": "customized", "parameters": [{"name": "auscert_api_key", "label": "AusCERT API Key ", "help_string": "", "required": true, "format_type": "password", "default_value": "", "placeholder": "", "type": "password", "value": "YFAMEMFYpHkAcx2xfZgGVeMWdRQugfc2q7QR9DDAMe4bCyMNqdR9WbNtnVDvtdP9"}], "data_inputs_options": [{"type": "customized_var", "name": "auscert_api_key", "title": "AusCERT API Key ", "description": "", "required_on_edit": false, "required_on_create": true, "format_type": "password", "default_value": "", "placeholder": ""}], "code": "# encoding = utf-8\n\nimport os\nimport sys\nimport time\nimport datetime\n\n\ndef validate_input(helper, definition):\n    \"\"\"Implement your own validation logic to validate the input stanza configurations\"\"\"\n    # This example accesses the modular input variable\n    # auscert_api_key = definition.parameters.get('auscert_api_key', None)\n    pass\n\ndef collect_events(helper, ew):\n\n    opt_auscert_api_key = helper.get_arg('auscert_api_key')\n\n    proxy_settings = helper.get_proxy()\n\n    helper.log_info(\"Retrieving AusCERT 7-day phishing feed\")\n\n    url = \"https://www.auscert.org.au/api/v1/malurl/phishing-7-txt\"\n    headers = {'API-Key': opt_auscert_api_key}\n\n    # The following examples send rest requests to some endpoint.\n    response = helper.send_http_request(url, method=\"GET\", parameters=None, payload=None,\n                                        headers=headers, cookies=None, verify=True, cert=None,\n                                        timeout=None, use_proxy=True)\n\n    response.raise_for_status()\n\n    for data in response.text.splitlines():\n        event = helper.new_event(data, index=helper.get_output_index(), source=url, sourcetype=helper.get_sourcetype())\n        ew.write_event(event)", "customized_options": [], "uuid": "324c96b8b74a4999a1272fe8c79e14a7", "sample_count": 0}]}, "global_settings_builder": {"global_settings": {"proxy_settings": {"proxy_type": "http"}, "log_settings": {"log_level": "DEBUG"}}}, "sourcetype_builder": {"auscert:phishing": {"metadata": {"event_count": 0, "data_input_name": "auscert_phishing_feed", "extractions_count": 0, "cims_count": 0}}, "auscert:malware": {"metadata": {"event_count": 0, "data_input_name": "auscert_malware_feed", "extractions_count": 0, "cims_count": 0}}}, "validation": {"validators": ["best_practice_validation", "data_model_mapping_validation", "field_extract_validation", "app_cert_validation"], "status": "job_finished", "validation_id": "v_1663731036_98", "progress": 1.0}}